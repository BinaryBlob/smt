#! /usr/bin/env python
# coding:utf-8

import unittest
from smt.decoder.stackdecoder import _future_cost_estimate


class StackDecoderTest(unittest.TestCase):

    def test_future_cost_estimate(self):
        sentences = u"the tourism initiative addresses this\
            for the first time".split()
        phrase_prob = {(1,): -1.0,
                       (2,): -2.0,
                       (3,): -1.5,
                       (4,): -2.4,
                       (5,): -1.4,
                       (6,): -1.0,
                       (7,): -1.0,
                       (8,): -1.9,
                       (9,): -1.6,
                       (3, 4): -4.0,
                       (5, 6): -2.5,
                       (7, 8): -2.2,
                       (6, 7): -1.3,
                       (8, 9): -2.4,
                       (5, 7): -2.7,
                       (6, 8): -2.3,
                       (7, 9): -2.3,
                       (6, 9): -2.3,
                       }
        one_word_prob = {(1,): -1.0,
                         (2,): -2.0,
                         (3,): -1.5,
                         (4,): -2.4,
                         (5,): -1.4,
                         (6,): -1.0,
                         (7,): -1.0,
                         (8,): -1.9,
                         (9,): -1.6,
                         }
        ans = _future_cost_estimate(sentences,
                                    one_word_prob,
                                    phrase_prob)
        val = {(1, 1): -1.0,
               (1, 2): -3.0,
               (1, 3): -4.5,
               (1, 4): -6.9,
               (1, 5): -8.3,
               (1, 6): -9.3,
               (1, 7): -9.6,
               (1, 8): -10.6,
               (1, 9): -10.6,
               (2, 2): -2.0,
               (2, 3): -3.5,
               (2, 4): -5.9,
               (2, 5): -7.3,
               (2, 6): -8.3,
               (2, 7): -8.6,
               (2, 8): -9.6,
               (2, 9): -9.6,
               (3, 3): -1.5,
               (3, 4): -3.9,
               (3, 5): -5.3,
               (3, 6): -6.3,
               (3, 7): -6.6,
               (3, 8): -7.6,
               (3, 9): -7.6,
               (4, 4): -2.4,
               (4, 5): -3.8,
               (4, 6): -4.8,
               (4, 7): -5.1,
               (4, 8): -6.1,
               (4, 9): -6.1,
               (5, 5): -1.4,
               (5, 6): -2.4,
               (5, 7): -2.7,
               (5, 8): -3.6999999999999997,
               (5, 9): -3.6999999999999997,
               (6, 6): -1.0,
               (6, 7): -1.3,
               (6, 8): -2.3,
               (6, 9): -2.3,
               (7, 7): -1.0,
               (7, 8): -2.2,
               (7, 9): -2.3,
               (8, 8): -1.9,
               (8, 9): -2.4,
               (9, 9): -1.6}
        self.assertEqual(ans, val)


if __name__ == '__main__':
    unittest.main()
